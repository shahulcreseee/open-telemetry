  
  version: '3.9'
  networks:
    open-telemetry:
      driver: bridge
  volumes:
    esdata:
      driver: local
    kibana-data:
      driver: local            
  services:
  # *********************
  # Telemetry Components
  # *********************

  #1.Elasticsearch(Acts as backend storage for both logs and traces)
    elasticsearch:
      image: docker.elastic.co/elasticsearch/elasticsearch:7.9.3
      networks:
        - open-telemetry
      ports:
        - "127.0.0.1:9200:9200"
        - "127.0.0.1:9300:9300"
      restart: on-failure
      environment:
        - cluster.name=jaeger-cluster
        - discovery.type=single-node
        - http.host=0.0.0.0
        - transport.host=127.0.0.1
        - ES_JAVA_OPTS=-Xms512m -Xmx512m
        - xpack.security.enabled=false
      volumes:
        - esdata:/usr/share/elasticsearch/data
      healthcheck:
        test: "curl -f http://localhost:9200 || exit 1"        
  #2.Kibana(Visualization for Elastic-search)      
    kibana:
      depends_on:
        - elasticsearch
      image: docker.elastic.co/kibana/kibana:7.9.3
      networks:
        - open-telemetry      
      container_name: kibana
      volumes:
        - kibana-data:/usr/share/kibana/data
      ports:
      - 5601:5601
      restart: on-failure
      environment:
        - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      healthcheck:
        test: "curl -f http://localhost:5601 || exit 1"
  #3.Jaeger
    jaeger-collector:
      image: jaegertracing/jaeger-collector
      ports:
        - "14269:14269"
        - "14268:14268"
        - "14267:14267"
        - "14250:14250"
        - "9411:9411"
      networks:
        - open-telemetry
      restart: on-failure
      environment:
        - SPAN_STORAGE_TYPE=elasticsearch
      command: [
        "--es.server-urls=http://elasticsearch:9200",
        "--es.num-shards=1",
        "--es.num-replicas=0",
        "--log-level=error"
      ]
      depends_on:
        - elasticsearch
    jaeger-query:
      image: jaegertracing/jaeger-query
      environment:
        - SPAN_STORAGE_TYPE=elasticsearch
        - no_proxy=localhost
      ports:
        - "16686:16686"
        - "16687:16687"
      networks:
        - open-telemetry
      restart: on-failure
      command: [
        "--es.server-urls=http://elasticsearch:9200",
        "--span-storage.type=elasticsearch",
        "--log-level=debug"
      ]
      depends_on:
        - jaeger-collector      
  #4.Prometheus
    prometheus:
      image: prom/prometheus:v2.42.0
      container_name: prometheus
      restart: on-failure
      volumes:
        - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      ports:
        - "9091:9090"
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "9090" ]
      depends_on:
        - otel-collector
      networks:
        - open-telemetry            
  #5.Grafana(Metrics visualization tool)        
    grafana:
      image: grafana/grafana:9.3.6
      container_name: grafana
      restart: unless-stopped
      ports:
        - "3000:3000"
      environment:
        - GF_USERS_ALLOW_SIGN_UP=false
      depends_on:
        - prometheus
      healthcheck:
        test: [ "CMD", "nc", "-z", "localhost", "3000" ]
      networks:
        - open-telemetry        
  #6.Otel-collector
    otel-collector:
      image: otel/opentelemetry-collector-contrib:0.76.1
      volumes: 
        - ./otel/otel-collector.yml:/etc/otelcol-contrib/collector-gateway.yaml
      command: [ "--config=/etc/otelcol-contrib/collector-gateway.yaml" ]
      ports:
        - "1888:1888"   # pprof extension
        - "13133:13133" # health_check extension
        - "4317:4317"        # OTLP gRPC receiver
        - "4318:4318"        # OTLP HTTP receiver
        - "55670:55679" # zpages extension
      networks:
        - open-telemetry
                        
    
      



